local UIS = game:GetService("UserInputService")
local RS = game:GetService("ReplicatedStorage")
local fbCD = false
local flameauraCD = false
UIS.InputBegan:Connect(function(Input,gameProcessedEvent)-- Inputs
	if gameProcessedEvent then return end
	if Input.KeyCode == Enum.KeyCode.E and fbCD == false then --getting key firing things to server and doing cooldown here
		fbCD = true
		task.delay(0,function()
			fbCD = false
		end)
		RS:WaitForChild("RemoteEvent"):FireServer("Fireball",game.Players.LocalPlayer:GetMouse().Hit)
	elseif Input.KeyCode == Enum.KeyCode.F and flameauraCD == false then
		flameauraCD = true
			task.delay(0,function()
			flameauraCD = false
			end)
			RS:WaitForChild("RemoteEvent"):FireServer("FlameAura",game.Players.LocalPlayer:GetMouse().Hit)
	end
end)
RS:WaitForChild("RemoteEvent").OnClientEvent:Connect(function(Player,Action,Mouse) -- receiving from server seperating them depending on the skill used and doing the script
	if Action == "Fireball" then
		Player.Character.HumanoidRootPart.CFrame = CFrame.lookAt(Player.Character.HumanoidRootPart.Position,Mouse.Position) -- making player look at mouse
		local Fireball = RS:WaitForChild("Fireball"):Clone() -- cloning positioning n stuff
		Fireball.Anchored = false
		Fireball.CFrame = Player.Character.HumanoidRootPart.CFrame
		Fireball.Parent = Player.Character
		local pushForce = Instance.new("BodyVelocity",Fireball) -- body velocity moving the fireball with this body mover
		pushForce.MaxForce = Vector3.new(1000000,1000000,1000000)
		local directionVector = (Mouse.Position - Fireball.Position).Unit
		local velocity = directionVector * 250
		pushForce.Velocity = velocity
		game.Debris:AddItem(Fireball,1)
		local Stop = true -- doing this to fix multi detecting
		task.spawn(function()
			local IgnoreList = {Player.Character,Fireball} --params and hitbox after this generally
			local FilterType = Enum.RaycastFilterType.Exclude
			local function detect()
				local OverlapParams = OverlapParams.new()
				OverlapParams.CollisionGroup = "Default"
				OverlapParams.FilterType = Enum.RaycastFilterType.Exclude
				OverlapParams.MaxParts = false
				OverlapParams.FilterType = FilterType
				OverlapParams.FilterDescendantsInstances = IgnoreList
				local parts = workspace:GetPartsInPart(Fireball, OverlapParams)
				for i,Hitted in pairs(parts) do
					if Stop == true then
						Stop = false
						Fireball:Destroy()
						if Player == script.Parent.Parent then
							task.spawn(function()
								local HitBox = Instance.new("Part")
								HitBox.Name = "HB"
								HitBox.Transparency = 1
								HitBox.Parent = Player.Character
								HitBox.Size = Vector3.new(25,25,25)
								HitBox.CFrame = Fireball.CFrame
								HitBox.Anchored = true
								HitBox.CanCollide = false
								HitBox.CanQuery = false
								HitBox.CanTouch = false
								HitBox.Massless = true
								HitBox.Color = Color3.new(1, 0, 0)
								HitBox.Material = Enum.Material.Neon
								game.Debris:AddItem(HitBox,0.1)
								IgnoreList = {Player.Character,HitBox}
								FilterType = Enum.RaycastFilterType.Exclude
								local function detect()
									OverlapParams.CollisionGroup = "Default"
									OverlapParams.FilterType = Enum.RaycastFilterType.Exclude
									OverlapParams.MaxParts = false
									OverlapParams.FilterType = FilterType
									OverlapParams.FilterDescendantsInstances = IgnoreList
									local parts = workspace:GetPartsInPart(HitBox, OverlapParams)
									for i,Hitted in pairs(parts) do
										local HittedCharacter = Hitted.Parent -- detecting if hitted parts parent is a character and has a humanoid then we check if its in the ignoring list
										local HittedHumanoid = HittedCharacter:FindFirstChild("Humanoid")
										if HittedHumanoid and not table.find(IgnoreList, HittedCharacter) then
											table.insert(IgnoreList,HittedCharacter) -- adding hittedcharacter to not detect it again
											local HittedPlayer = game.Players:GetPlayerFromCharacter(HittedCharacter)
											if Player == script.Parent.Parent then -- doing damage only once
												RS:WaitForChild("HitBoxRemoteEvent"):FireServer("Damage",10,HittedCharacter)-- damage
											end
										end
									end
								end
								coroutine.wrap(function()
									while HitBox.Parent == Player.Character do
										detect()
										task.wait()
									end
								end)()
							end)
						end
						local Explosion = RS:WaitForChild("Explosion"):Clone() --explosion
						Explosion.CFrame = Fireball.CFrame
						Explosion.Parent = Player.Character
						game.Debris:AddItem(Explosion,3)
						for i,v in pairs(Explosion:GetDescendants()) do -- getting all descendants and delaying if has delay attribute then emitting if it has aswell
							if v:IsA("ParticleEmitter") then
								task.delay(v:GetAttribute("EmitDelay"),function()
									v:Emit(v:GetAttribute("EmitCount"))
								end)
							end
						end
					end
				end
			end
			coroutine.wrap(function()
				while Fireball.Parent == Player.Character do -- repeating the hitbox
					detect()
					task.wait()
				end
			end)()
		end)
	elseif Action == "FlameAura" then
		task.wait(1)
		for i,v in pairs(Player.Character:GetChildren()) do
			if v:IsA("BasePart") then
				for i,s in pairs(RS:FindFirstChild("Aura"):GetChildren()) do
					local clone = s:Clone()
					clone.Parent = v
					task.delay(5,function()
						clone.Enabled = false
					end)
					game.Debris:AddItem(clone,6)
				end
			end
		end
		task.spawn(function()
			local HitBox = Instance.new("Part")
			HitBox.Name = "HB"
			HitBox.Transparency = 1
			HitBox.Parent = Player.Character
			HitBox.Size = Vector3.new(25,25,25)
			HitBox.CFrame = Player.Character.HumanoidRootPart.CFrame
			HitBox.Anchored = true
			HitBox.CanCollide = false
			HitBox.CanQuery = false
			HitBox.CanTouch = false
			HitBox.Massless = true
			HitBox.Color = Color3.new(1, 0, 0)
			HitBox.Material = Enum.Material.Neon
			game.Debris:AddItem(HitBox,0.1)
			local IgnoreList = {Player.Character,HitBox}
			local FilterType = Enum.RaycastFilterType.Exclude
			local function detect()
				local OverlapParams = OverlapParams.new()
				OverlapParams.CollisionGroup = "Default"
				OverlapParams.FilterType = Enum.RaycastFilterType.Exclude
				OverlapParams.MaxParts = false
				OverlapParams.FilterType = FilterType
				OverlapParams.FilterDescendantsInstances = IgnoreList
				local parts = workspace:GetPartsInPart(HitBox, OverlapParams)
				for i,Hitted in pairs(parts) do
					local HittedCharacter = Hitted.Parent
					local HittedHumanoid = HittedCharacter:FindFirstChild("Humanoid")
					if HittedHumanoid and not table.find(IgnoreList, HittedCharacter) then
						table.insert(IgnoreList,HittedCharacter)
						local HittedPlayer = game.Players:GetPlayerFromCharacter(HittedCharacter)
						if Player == script.Parent.Parent then
							RS:WaitForChild("HitBoxRemoteEvent"):FireServer("Damage",5,HittedCharacter)
						end
					end
				end
			end
			coroutine.wrap(function()
				while HitBox.Parent == Player.Character do
					detect()
					task.wait()
				end
			end)()
		end)
	end
end)
